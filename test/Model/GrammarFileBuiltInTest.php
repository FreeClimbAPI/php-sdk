<?php

/**
 * GrammarFileBuiltInTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  FreeClimb\Api
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto-generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace FreeClimb\Api\Test\Model;

use FreeClimb\Api\Model\GrammarFileBuiltIn;
use PHPUnit\Framework\TestCase;

/**
 * GrammarFileBuiltInTest Class Doc Comment
 *
 * @category    Class
 * @description GrammarFileBuiltIn
 * @package     FreeClimb\Api
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GrammarFileBuiltInTest extends TestCase
{
    protected $GrammarFileBuiltIn;

    /**
     * Test "GrammarFileBuiltIn"
     */
    public function setUp() : void
    {
        $this->GrammarFileBuiltIn = new GrammarFileBuiltIn();
    }

public function test_ALPHNUM6_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::ALPHNUM6;
    $this->assertEquals($test, 'ALPHNUM6');
}


public function test_ANY_DIG_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::ANY_DIG;
    $this->assertEquals($test, 'ANY_DIG');
}


public function test_DIG1_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG1;
    $this->assertEquals($test, 'DIG1');
}


public function test_DIG2_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG2;
    $this->assertEquals($test, 'DIG2');
}


public function test_DIG3_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG3;
    $this->assertEquals($test, 'DIG3');
}


public function test_DIG4_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG4;
    $this->assertEquals($test, 'DIG4');
}


public function test_DIG5_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG5;
    $this->assertEquals($test, 'DIG5');
}


public function test_DIG6_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG6;
    $this->assertEquals($test, 'DIG6');
}


public function test_DIG7_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG7;
    $this->assertEquals($test, 'DIG7');
}


public function test_DIG8_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG8;
    $this->assertEquals($test, 'DIG8');
}


public function test_DIG9_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG9;
    $this->assertEquals($test, 'DIG9');
}


public function test_DIG10_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG10;
    $this->assertEquals($test, 'DIG10');
}


public function test_DIG11_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::DIG11;
    $this->assertEquals($test, 'DIG11');
}


public function test_UP_TO_20_DIGIT_SEQUENCE_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::UP_TO_20_DIGIT_SEQUENCE;
    $this->assertEquals($test, 'UP_TO_20_DIGIT_SEQUENCE');
}


public function test_VERSAY_YESNO_should_deserialize_to_string() {
    $test = GrammarFileBuiltIn::VERSAY_YESNO;
    $this->assertEquals($test, 'VERSAY_YESNO');
}


}
